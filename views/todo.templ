package views

import "github.com/pmarley/htmx-starter/types"
import "fmt"

templ TodoPage(todos []types.Todo) {
    @page() {
        <div class="panel is-link is-light">
            <p class="panel-heading">TODO List</p>
            <div class="panel-block has-background-light has-text-link-dark">
                @TodoForm()
            </div>
            <div class="panel-block has-background-light has-text-link-dark">
                @TodoFilter()
            </div>
            <div id="todos" class="has-background-light has-text-link-dark">
                @TodoList(todos)
            </div>
        </div>
        
    }
}

templ TodoList(todos []types.Todo) {
    for _,t := range todos{
        @Todo(t)
    }
}

templ TodoFilter() {
   <div class="container is-flex">
    <input 
        type="text" 
        name="filter"
        class="input has-background-white-ter is-medium has-text-link-dark is-info"
        autocomplete="off"
        hx-get="/todos/filter"
        hx-target="#todos"
        hx-trigger="keyup changed delay:500ms"
    />
    <span class="ml-2 is-align-content-center">
        @SvgSearchIcon()
    </span>

   </div>
   
}

templ SvgSearchIcon() {
    <svg width="35" height="auto" viewBox="-3.2 -3.2 38.40 38.40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="#000000" stroke="#000000" transform="rotate(0)">
  <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
  <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
  <g id="SVGRepo_iconCarrier">
    <title>search</title>
    <desc>Created with Sketch Beta.</desc>
    <defs></defs>
    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">
      <g id="Icon-Set" sketch:type="MSLayerGroup" transform="translate(-256.000000, -1139.000000)" fill="#3273dc"> <!-- Cor is-link do Bulma -->
        <path d="M269.46,1163.45 C263.17,1163.45 258.071,1158.44 258.071,1152.25 C258.071,1146.06 263.17,1141.04 269.46,1141.04 C275.75,1141.04 280.85,1146.06 280.85,1152.25 C280.85,1158.44 275.75,1163.45 269.46,1163.45 L269.46,1163.45 Z M287.688,1169.25 L279.429,1161.12 C281.591,1158.77 282.92,1155.67 282.92,1152.25 C282.92,1144.93 276.894,1139 269.46,1139 C262.026,1139 256,1144.93 256,1152.25 C256,1159.56 262.026,1165.49 269.46,1165.49 C272.672,1165.49 275.618,1164.38 277.932,1162.53 L286.224,1170.69 C286.629,1171.09 287.284,1171.09 287.688,1170.69 C288.093,1170.3 288.093,1169.65 287.688,1169.25 L287.688,1169.25 Z" id="search" sketch:type="MSShapeGroup"></path>
      </g>
    </g>
  </g>
</svg>

}

templ TodoForm() {
    <form class="container is-flex">
        <input
            id="description" 
            type="text" 
            name="description"
            autocomplete="off"
            class="input has-background-white-ter is-medium has-text-link-dark"
        />
        <button  hx-post="/todos" hx-target="#todos" hx-swap="afterbegin" class="button ml-2 is-link is-medium">Add</button>
    </form>
}

css doneTodo() {
    text-decoration: line-through;
}

templ Todo(t types.Todo) {
    <label 
        class="panel-block has-text-link" 
        hx-put={ string(templ.URL("/todos/" + fmt.Sprintf("%d",t.Id))) } 
        hx-target="this"
        hx-swap="outerHTML"
    >
        <span 
            class={ "mr-auto", templ.KV(doneTodo(), t.Done) }
            > 
                { t.Description }
            </span>
        <span 
            title="Remove" 
            class="button is-danger is-dark is-small" 
            hx-delete={ string(templ.URL(fmt.Sprintf("/todos/%d", t.Id))) } 
            hx-swap="outerHTML"
            hx-confirm="Are you sure you want to delete this task?"
            hx-on:click="event.stopPropagation()"
            >
                Delete
            </span>
    </label>
}